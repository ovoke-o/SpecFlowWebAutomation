// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace InvestecAutomation.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class SubmitInvestecFormFeature : object, Xunit.IClassFixture<SubmitInvestecFormFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "SubmitInvestecForm.feature"
#line hidden
        
        public SubmitInvestecFormFeature(SubmitInvestecFormFeature.FixtureData fixtureData, InvestecAutomation_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Submit Investec Form", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Fill and submit Investec form successfully")]
        [Xunit.TraitAttribute("FeatureTitle", "Submit Investec Form")]
        [Xunit.TraitAttribute("Description", "Fill and submit Investec form successfully")]
        [Xunit.InlineDataAttribute("John", "Doe", "ABC Corp", "AB1234", "www.test.com", "john.doe@example.com", "1234567890", "Trade and import", "0-15", "0 - 10mil", "0 - 5mil", "1 - 5mil", "Yes", "Yes", new string[0])]
        [Xunit.InlineDataAttribute("Alice", "Smith", "XYZ Ltd", "XY9876", "www.test.com", "alice.smith@example.com", "0987654321", "Trade and import", "0-15", "0 - 10mil", "0 - 5mil", "1 - 5mil", "Yes", "Yes", new string[0])]
        public virtual void FillAndSubmitInvestecFormSuccessfully(string name, string surname, string businessName, string businessRegistrationNumber, string website, string emailAddress, string phoneNumber, string investecService, string numberOfAssets, string annualTurnover, string workingCapital, string assetFinance, string companyTrading3OrMoreYears, string financialStatementsReady, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Name", name);
            argumentsOfScenario.Add("Surname", surname);
            argumentsOfScenario.Add("BusinessName", businessName);
            argumentsOfScenario.Add("BusinessRegistrationNumber", businessRegistrationNumber);
            argumentsOfScenario.Add("Website", website);
            argumentsOfScenario.Add("EmailAddress", emailAddress);
            argumentsOfScenario.Add("PhoneNumber", phoneNumber);
            argumentsOfScenario.Add("InvestecService", investecService);
            argumentsOfScenario.Add("NumberOfAssets", numberOfAssets);
            argumentsOfScenario.Add("AnnualTurnover", annualTurnover);
            argumentsOfScenario.Add("WorkingCapital", workingCapital);
            argumentsOfScenario.Add("AssetFinance", assetFinance);
            argumentsOfScenario.Add("CompanyTrading3OrMoreYears", companyTrading3OrMoreYears);
            argumentsOfScenario.Add("financialStatementsReady", financialStatementsReady);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fill and submit Investec form successfully", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 3
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
        testRunner.Given("I navigate to the Investec form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 5
        testRunner.When(string.Format("I fill in the form with the following details \"{0}\", \"{1}\", \"{2}\", \"{3}\", \"{4}\", " +
                            "\"{5}\", \"{6}\", \"{7}\", \"{8}\", \"{9}\", \"{10}\", \"{11}\", \"{12}\", \"{13}\"", name, surname, businessName, businessRegistrationNumber, website, emailAddress, phoneNumber, investecService, numberOfAssets, annualTurnover, workingCapital, assetFinance, companyTrading3OrMoreYears, financialStatementsReady), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 6
        testRunner.Then("the submit button should be enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 7
        testRunner.When("I click the submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
        testRunner.Then("a success message should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 9
        testRunner.Then("I take a screenshot of the success screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                SubmitInvestecFormFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                SubmitInvestecFormFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
